name: .NET and Go Build

# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go
on:
  push:
    branches: ["**"]
    paths-ignore:
      - "**.md"
      - "docs/**"
      - ".vscode/**"
      - ".github/dependabot.yml"
      - ".env"
      - "docker-compose.yml"
      - "docker/**"
  pull_request:
    paths-ignore:
      - "**.md"
    branches: [main]
env:
  BINARY: "server"
  GO_VERSION: "1.23"
  BASE_VERSION: "1.0.0"
  IMAGE_NAME: "NA"
jobs:
  pre_flight:
    runs-on: ubuntu-latest

    outputs:
      new_tag: ${{ steps.tag_version.outputs.new_tag }}
      changelog: ${{ steps.tag_version.outputs.changelog }}
    steps:
      - name: Establish tags and versions
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
  build:
    runs-on: ubuntu-latest
    needs: [pre_flight]
    steps:
    - name: Echo Tags
      run: |
        echo new_tag: ${{needs.pre_flight.outputs.new_tag}} 
        echo changelog: ${{needs.pre_flight.outputs.changelog}}
        
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: "^${{ env.GO_VERSION }}"
    
    - name: Build and Publish BlazorApp1
      run: |
        cd BlazorApp1
        dotnet publish -c Release -o ./publish
        cd ..
    
    - name: Process BlazorApp1 Output
      run: |
        rm -rf ./cmd/httpserver/static/app1/wwwroot
        cp -r ./BlazorApp1/publish/wwwroot ./cmd/httpserver/static/app1/wwwroot
        mv ./cmd/httpserver/static/app1/wwwroot/index.html ./cmd/httpserver/static/app1/wwwroot/index_template.html
        sed -i 's#<base href="/" />#<base href="/app1/" />#' ./cmd/httpserver/static/app1/wwwroot/index_template.html
    
    - name: Build and Publish BlazorApp2
      run: |
        cd BlazorApp2
        dotnet publish -c Release -o ./publish
        cd ..
    
    - name: Process BlazorApp2 Output
      run: |
        rm -rf ./cmd/httpserver/static/app2/wwwroot
        cp -r ./BlazorApp2/publish/wwwroot ./cmd/httpserver/static/app2/wwwroot
        mv ./cmd/httpserver/static/app2/wwwroot/index.html ./cmd/httpserver/static/app2/wwwroot/index_template.html
        sed -i 's#<base href="/" />#<base href="/app2/" />#' ./cmd/httpserver/static/app2/wwwroot/index_template.html
    
    - name: Build Go Server
      run: |
        cd ./cmd/httpserver/
        go build .
        cd ../..
    
    - name: Test
      run: dotnet test --no-build --verbosity normal
      
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)
    - name: Establish Versioning, Tags, and Labels
      id: vtl
      uses: mapped/action-vtl@latest
      with:
        baseVersion: ${{ env.BASE_VERSION }}
        gitHubToken: ${{ secrets.GITHUB_TOKEN }}
        dockerImage: ${{ env.IMAGE_NAME }}
        
    - name: Upload Static Files
      uses: actions/upload-artifact@v3
      with:
        name: static-files
        path: ./cmd/httpserver/static
        if-no-files-found: error
    
